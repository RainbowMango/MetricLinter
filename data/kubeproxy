# HELP apiserver_audit_event_total [ALPHA] Counter of audit events generated and sent to the audit backend.
# TYPE apiserver_audit_event_total counter
apiserver_audit_event_total 0
# HELP apiserver_audit_requests_rejected_total [ALPHA] Counter of apiserver requests rejected due to an error in audit logging backend.
# TYPE apiserver_audit_requests_rejected_total counter
apiserver_audit_requests_rejected_total 0
# HELP go_gc_duration_seconds A summary of the GC invocation durations.
# TYPE go_gc_duration_seconds summary
go_gc_duration_seconds{quantile="0"} 9.474e-06
go_gc_duration_seconds{quantile="0.25"} 1.523e-05
go_gc_duration_seconds{quantile="0.5"} 2.9823e-05
go_gc_duration_seconds{quantile="0.75"} 4.304e-05
go_gc_duration_seconds{quantile="1"} 0.000204098
go_gc_duration_seconds_sum 0.001694177
go_gc_duration_seconds_count 39
# HELP go_goroutines Number of goroutines that currently exist.
# TYPE go_goroutines gauge
go_goroutines 36
# HELP go_info Information about the Go environment.
# TYPE go_info gauge
go_info{version="go1.13.5"} 1
# HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.
# TYPE go_memstats_alloc_bytes gauge
go_memstats_alloc_bytes 3.311864e+06
# HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed.
# TYPE go_memstats_alloc_bytes_total counter
go_memstats_alloc_bytes_total 1.3465688e+07
# HELP go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table.
# TYPE go_memstats_buck_hash_sys_bytes gauge
go_memstats_buck_hash_sys_bytes 1.448895e+06
# HELP go_memstats_frees_total Total number of frees.
# TYPE go_memstats_frees_total counter
go_memstats_frees_total 83437
# HELP go_memstats_gc_cpu_fraction The fraction of this program's available CPU time used by the GC since the program started.
# TYPE go_memstats_gc_cpu_fraction gauge
go_memstats_gc_cpu_fraction 3.0287786539925465e-06
# HELP go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata.
# TYPE go_memstats_gc_sys_bytes gauge
go_memstats_gc_sys_bytes 2.390016e+06
# HELP go_memstats_heap_alloc_bytes Number of heap bytes allocated and still in use.
# TYPE go_memstats_heap_alloc_bytes gauge
go_memstats_heap_alloc_bytes 3.311864e+06
# HELP go_memstats_heap_idle_bytes Number of heap bytes waiting to be used.
# TYPE go_memstats_heap_idle_bytes gauge
go_memstats_heap_idle_bytes 6.0268544e+07
# HELP go_memstats_heap_inuse_bytes Number of heap bytes that are in use.
# TYPE go_memstats_heap_inuse_bytes gauge
go_memstats_heap_inuse_bytes 5.85728e+06
# HELP go_memstats_heap_objects Number of allocated objects.
# TYPE go_memstats_heap_objects gauge
go_memstats_heap_objects 20721
# HELP go_memstats_heap_released_bytes Number of heap bytes released to OS.
# TYPE go_memstats_heap_released_bytes gauge
go_memstats_heap_released_bytes 5.9940864e+07
# HELP go_memstats_heap_sys_bytes Number of heap bytes obtained from system.
# TYPE go_memstats_heap_sys_bytes gauge
go_memstats_heap_sys_bytes 6.6125824e+07
# HELP go_memstats_last_gc_time_seconds Number of seconds since 1970 of last garbage collection.
# TYPE go_memstats_last_gc_time_seconds gauge
go_memstats_last_gc_time_seconds 1.575967944075245e+09
# HELP go_memstats_lookups_total Total number of pointer lookups.
# TYPE go_memstats_lookups_total counter
go_memstats_lookups_total 0
# HELP go_memstats_mallocs_total Total number of mallocs.
# TYPE go_memstats_mallocs_total counter
go_memstats_mallocs_total 104158
# HELP go_memstats_mcache_inuse_bytes Number of bytes in use by mcache structures.
# TYPE go_memstats_mcache_inuse_bytes gauge
go_memstats_mcache_inuse_bytes 6944
# HELP go_memstats_mcache_sys_bytes Number of bytes used for mcache structures obtained from system.
# TYPE go_memstats_mcache_sys_bytes gauge
go_memstats_mcache_sys_bytes 16384
# HELP go_memstats_mspan_inuse_bytes Number of bytes in use by mspan structures.
# TYPE go_memstats_mspan_inuse_bytes gauge
go_memstats_mspan_inuse_bytes 82824
# HELP go_memstats_mspan_sys_bytes Number of bytes used for mspan structures obtained from system.
# TYPE go_memstats_mspan_sys_bytes gauge
go_memstats_mspan_sys_bytes 98304
# HELP go_memstats_next_gc_bytes Number of heap bytes when next garbage collection will take place.
# TYPE go_memstats_next_gc_bytes gauge
go_memstats_next_gc_bytes 6.050944e+06
# HELP go_memstats_other_sys_bytes Number of bytes used for other system allocations.
# TYPE go_memstats_other_sys_bytes gauge
go_memstats_other_sys_bytes 1.223993e+06
# HELP go_memstats_stack_inuse_bytes Number of bytes in use by the stack allocator.
# TYPE go_memstats_stack_inuse_bytes gauge
go_memstats_stack_inuse_bytes 983040
# HELP go_memstats_stack_sys_bytes Number of bytes obtained from system for stack allocator.
# TYPE go_memstats_stack_sys_bytes gauge
go_memstats_stack_sys_bytes 983040
# HELP go_memstats_sys_bytes Number of bytes obtained from system.
# TYPE go_memstats_sys_bytes gauge
go_memstats_sys_bytes 7.2286456e+07
# HELP go_threads Number of OS threads created.
# TYPE go_threads gauge
go_threads 11
# HELP kubeproxy_network_programming_duration_seconds [ALPHA] In Cluster Network Programming Latency in seconds
# TYPE kubeproxy_network_programming_duration_seconds histogram
kubeproxy_network_programming_duration_seconds_bucket{le="0"} 0
kubeproxy_network_programming_duration_seconds_bucket{le="0.25"} 1
kubeproxy_network_programming_duration_seconds_bucket{le="0.5"} 1
kubeproxy_network_programming_duration_seconds_bucket{le="1"} 1
kubeproxy_network_programming_duration_seconds_bucket{le="2"} 1
kubeproxy_network_programming_duration_seconds_bucket{le="3"} 1
kubeproxy_network_programming_duration_seconds_bucket{le="4"} 1
kubeproxy_network_programming_duration_seconds_bucket{le="5"} 1
kubeproxy_network_programming_duration_seconds_bucket{le="6"} 1
kubeproxy_network_programming_duration_seconds_bucket{le="7"} 1
kubeproxy_network_programming_duration_seconds_bucket{le="8"} 1
kubeproxy_network_programming_duration_seconds_bucket{le="9"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="10"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="11"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="12"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="13"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="14"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="15"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="16"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="17"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="18"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="19"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="20"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="21"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="22"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="23"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="24"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="25"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="26"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="27"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="28"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="29"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="30"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="31"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="32"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="33"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="34"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="35"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="36"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="37"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="38"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="39"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="40"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="41"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="42"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="43"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="44"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="45"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="46"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="47"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="48"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="49"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="50"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="51"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="52"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="53"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="54"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="55"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="56"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="57"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="58"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="59"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="60"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="65"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="70"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="75"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="80"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="85"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="90"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="95"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="100"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="105"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="110"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="115"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="120"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="150"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="180"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="210"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="240"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="270"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="300"} 2
kubeproxy_network_programming_duration_seconds_bucket{le="+Inf"} 2
kubeproxy_network_programming_duration_seconds_sum 8.324701586
kubeproxy_network_programming_duration_seconds_count 2
# HELP kubeproxy_sync_proxy_rules_duration_seconds [ALPHA] SyncProxyRules latency in seconds
# TYPE kubeproxy_sync_proxy_rules_duration_seconds histogram
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="0.001"} 0
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="0.002"} 0
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="0.004"} 0
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="0.008"} 0
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="0.016"} 0
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="0.032"} 2
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="0.064"} 2
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="0.128"} 3
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="0.256"} 3
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="0.512"} 3
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="1.024"} 3
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="2.048"} 3
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="4.096"} 3
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="8.192"} 3
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="16.384"} 3
kubeproxy_sync_proxy_rules_duration_seconds_bucket{le="+Inf"} 3
kubeproxy_sync_proxy_rules_duration_seconds_sum 0.116657187
kubeproxy_sync_proxy_rules_duration_seconds_count 3
# HELP kubeproxy_sync_proxy_rules_endpoint_changes_pending [ALPHA] Pending proxy rules Endpoint changes
# TYPE kubeproxy_sync_proxy_rules_endpoint_changes_pending gauge
kubeproxy_sync_proxy_rules_endpoint_changes_pending 0
# HELP kubeproxy_sync_proxy_rules_endpoint_changes_total [ALPHA] Cumulative proxy rules Endpoint changes
# TYPE kubeproxy_sync_proxy_rules_endpoint_changes_total counter
kubeproxy_sync_proxy_rules_endpoint_changes_total 12
# HELP kubeproxy_sync_proxy_rules_iptables_restore_failures_total [ALPHA] Cumulative proxy iptables restore failures
# TYPE kubeproxy_sync_proxy_rules_iptables_restore_failures_total counter
kubeproxy_sync_proxy_rules_iptables_restore_failures_total 0
# HELP kubeproxy_sync_proxy_rules_last_timestamp_seconds [ALPHA] The last time proxy rules were successfully synced
# TYPE kubeproxy_sync_proxy_rules_last_timestamp_seconds gauge
kubeproxy_sync_proxy_rules_last_timestamp_seconds 1.5759673621653774e+09
# HELP kubeproxy_sync_proxy_rules_service_changes_pending [ALPHA] Pending proxy rules Service changes
# TYPE kubeproxy_sync_proxy_rules_service_changes_pending gauge
kubeproxy_sync_proxy_rules_service_changes_pending 0
# HELP kubeproxy_sync_proxy_rules_service_changes_total [ALPHA] Cumulative proxy rules Service changes
# TYPE kubeproxy_sync_proxy_rules_service_changes_total counter
kubeproxy_sync_proxy_rules_service_changes_total 10
# HELP kubernetes_build_info [ALPHA] A metric with a constant '1' value labeled by major, minor, git version, git commit, git tree state, build date, Go version, and compiler from which Kubernetes was built, and platform on which it is running.
# TYPE kubernetes_build_info gauge
kubernetes_build_info{buildDate="2019-12-10T07:41:31Z",compiler="gc",gitCommit="9bf52c2aa69bd543badd268a465dc50318682a59",gitTreeState="clean",gitVersion="v1.18.0-alpha.0.1585+9bf52c2aa69bd5",goVersion="go1.13.5",major="1",minor="18+",platform="linux/amd64"} 1
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 0.52
# HELP process_max_fds Maximum number of open file descriptors.
# TYPE process_max_fds gauge
process_max_fds 65535
# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 14
# HELP process_resident_memory_bytes Resident memory size in bytes.
# TYPE process_resident_memory_bytes gauge
process_resident_memory_bytes 2.0148224e+07
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.57596373827e+09
# HELP process_virtual_memory_bytes Virtual memory size in bytes.
# TYPE process_virtual_memory_bytes gauge
process_virtual_memory_bytes 1.43925248e+08
# HELP process_virtual_memory_max_bytes Maximum amount of virtual memory available in bytes.
# TYPE process_virtual_memory_max_bytes gauge
process_virtual_memory_max_bytes -1
# HELP rest_client_exec_plugin_certificate_rotation_age [ALPHA] Histogram of the number of seconds the last auth exec plugin client certificate lived before being rotated. If auth exec plugin client certificates are unused, histogram will contain no data.
# TYPE rest_client_exec_plugin_certificate_rotation_age histogram
rest_client_exec_plugin_certificate_rotation_age_bucket{le="600"} 0
rest_client_exec_plugin_certificate_rotation_age_bucket{le="1800"} 0
rest_client_exec_plugin_certificate_rotation_age_bucket{le="3600"} 0
rest_client_exec_plugin_certificate_rotation_age_bucket{le="14400"} 0
rest_client_exec_plugin_certificate_rotation_age_bucket{le="86400"} 0
rest_client_exec_plugin_certificate_rotation_age_bucket{le="604800"} 0
rest_client_exec_plugin_certificate_rotation_age_bucket{le="2.592e+06"} 0
rest_client_exec_plugin_certificate_rotation_age_bucket{le="7.776e+06"} 0
rest_client_exec_plugin_certificate_rotation_age_bucket{le="1.5552e+07"} 0
rest_client_exec_plugin_certificate_rotation_age_bucket{le="3.1104e+07"} 0
rest_client_exec_plugin_certificate_rotation_age_bucket{le="1.24416e+08"} 0
rest_client_exec_plugin_certificate_rotation_age_bucket{le="+Inf"} 0
rest_client_exec_plugin_certificate_rotation_age_sum 0
rest_client_exec_plugin_certificate_rotation_age_count 0
# HELP rest_client_exec_plugin_ttl_seconds [ALPHA] Gauge of the shortest TTL (time-to-live) of the client certificate(s) managed by the auth exec plugin. The value is in seconds until certificate expiry (negative if already expired). If auth exec plugins are unused or manage no TLS certificates, the value will be +INF.
# TYPE rest_client_exec_plugin_ttl_seconds gauge
rest_client_exec_plugin_ttl_seconds +Inf
# HELP rest_client_request_duration_seconds [ALPHA] Request latency in seconds. Broken down by verb and URL.
# TYPE rest_client_request_duration_seconds histogram
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="GET",le="0.001"} 0
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="GET",le="0.002"} 0
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="GET",le="0.004"} 2
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="GET",le="0.008"} 2
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="GET",le="0.016"} 2
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="GET",le="0.032"} 3
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="GET",le="0.064"} 3
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="GET",le="0.128"} 3
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="GET",le="0.256"} 3
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="GET",le="0.512"} 3
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="GET",le="+Inf"} 3
rest_client_request_duration_seconds_sum{url="https://localhost:6443/%7Bprefix%7D",verb="GET"} 0.023895090999999997
rest_client_request_duration_seconds_count{url="https://localhost:6443/%7Bprefix%7D",verb="GET"} 3
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="POST",le="0.001"} 0
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="POST",le="0.002"} 0
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="POST",le="0.004"} 0
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="POST",le="0.008"} 1
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="POST",le="0.016"} 1
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="POST",le="0.032"} 1
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="POST",le="0.064"} 1
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="POST",le="0.128"} 1
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="POST",le="0.256"} 1
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="POST",le="0.512"} 1
rest_client_request_duration_seconds_bucket{url="https://localhost:6443/%7Bprefix%7D",verb="POST",le="+Inf"} 1
rest_client_request_duration_seconds_sum{url="https://localhost:6443/%7Bprefix%7D",verb="POST"} 0.005228049
rest_client_request_duration_seconds_count{url="https://localhost:6443/%7Bprefix%7D",verb="POST"} 1
# HELP rest_client_requests_total [ALPHA] Number of HTTP requests, partitioned by status code, method, and host.
# TYPE rest_client_requests_total counter
rest_client_requests_total{code="200",host="localhost:6443",method="GET"} 23
rest_client_requests_total{code="201",host="localhost:6443",method="POST"} 1
